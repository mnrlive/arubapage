"use strict";var precacheConfig=[["/index.html","da1a7942a23b6e0e2fc16fc0c094a722"],["/static/css/main.55f2897e.css","b39a7c40dfa44875790e119707ec0970"],["/static/media/24ora.a7c8bf13.jpg","a7c8bf13ab0b67bf9f9ef323433f0bd8"],["/static/media/297sport.ac3557a3.JPG","ac3557a3d9b69fa3b087fee6c8d9a3f8"],["/static/media/TeleArubaGrey.2389ed14.png","2389ed1471999666f5a19724f47ac3a9"],["/static/media/aruba.0097483b.ico","0097483bdd9c2a3d47dc9460d6145b76"],["/static/media/arubaNative.0e65099c.PNG","0e65099ce8c0158c5753cec30c336472"],["/static/media/arubaToday.7cd11ee3.PNG","7cd11ee304082d54faecf6fa4e671314"],["/static/media/awe.257ac8ca.PNG","257ac8cacdd4d5ab490e30be1497fb90"],["/static/media/aweMainta.9b12ae89.PNG","9b12ae8966c9ea3dc02bc1be35e9a306"],["/static/media/batiBlekiHD.d4b9b083.PNG","d4b9b083bcf5211d811a45ffc6b9ce61"],["/static/media/bondia.25db4f13.PNG","25db4f133011fb556d5c07b201336266"],["/static/media/coolFm.47356cae.png","47356cae650cd41f509a221ccbbef192"],["/static/media/diario.f4a5deea.PNG","f4a5deeae1c3780dea765c83fc77ee82"],["/static/media/eArubiano.b4e35207.PNG","b4e352075c539bdee451ff1b69e20c58"],["/static/media/focus.66065183.PNG","66065183f7b4f506a441a3d50bb4f911"],["/static/media/loader.9c458897.svg","9c458897cd828915fa62e7e1a6341126"],["/static/media/masnoticia.ec232440.PNG","ec232440a78fc4f833a0b29ffd39c005"],["/static/media/noticiaCLa.aa9202e7.PNG","aa9202e7e98b54056c2fc8563c9690c5"],["/static/media/soloDefaultimg.5417e189.jpg","5417e189832641c789b2961ca0991404"],["/static/media/twitterPage.832d4675.PNG","832d46752d45c17d6374f242772cca76"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,t,c){var n=new URL(e);return c&&n.pathname.match(c)||(n.search+=(n.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),n.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return t.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],c=new URL(a,self.location),n=createCacheKey(c,hashParamName,t,/\.\w{8}\./);return[c.toString(),n]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(c){return setOfCachedUrls(c).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return c.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){if("GET"===a.request.method){var e,t=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),c="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,c),e=urlsToCacheKeys.has(t));var n="/index.html";!e&&"navigate"===a.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],a.request.url)&&(t=new URL(n,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)}))}});